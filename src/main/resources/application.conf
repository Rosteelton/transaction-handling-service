aecor {
  akka-runtime {
    number-of-shards = 30
    ask-timeout = 60s
    idle-timeout = 60s
  }
}

cluster {
  system-name = "transactions-processing"
  host = "0.0.0.0"
  port = 51000
  min-nr-of-members = 1
  downing-strategy = static-quorum
}

postgres {
  contact-points = "127.0.0.1"
  port = 5432
  database = "transactions"
  username = "postgres"
  password = ""
}

event-journals {
  accounts {
    table-name = "account_event",
    polling-interval = 200ms
  }
}

http-server {
  host = "0.0.0.0"
  port = 9000
}

akka {
  loglevel = "debug"
  stdout-loglevel = "debug"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = ${cluster.host}
      port = ${cluster.port}
      bind-hostname = "0.0.0.0"
      bind-port = ${cluster.port}
    }
    retry-gate-closed-for = 1s
  }

  cluster {
    min-nr-of-members = ${cluster.min-nr-of-members}
    seed-nodes = [
      "akka.tcp://"${cluster.system-name}"@"${cluster.host}":"${cluster.port}
    ]
    down-removal-margin = 3s
  }

  coordinated-shutdown.exit-jvm = on
}
